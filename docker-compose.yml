services:
  # frontend:
  #   build:
  #     context: ./LGC.Frontend
  #     args:
  #       VITE_API_URL: http://localhost # Set this to match the backend service
  #       VITE_CLERK_PUBLISHABLE_KEY: pk_test_dGhhbmtmdWwtYm9iY2F0LTAuY2xlcmsuYWNjb3VudHMuZGV2JA
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - backend
  #   environment:
  #     - VITE_CLERK_PUBLISHABLE_KEY=${VITE_CLERK_PUBLISHABLE_KEY}
  #     - VITE_API_URL=${VITE_API_URL}
  #   volumes:
  #     - ./PicProject.Frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  backend:
    build:
      context: .
      dockerfile: LGC.API/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      geodb:
        condition: service_healthy
    environment:
      - ConnectionStrings__Postgres=Host=db;Database=postgres;Port=5432;Username=postgres;Password=postgres

  db:
    image: postgres:16
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
